name: u34 push workflow
run-name: ${{ github.actor }} run workflow  on ${{ github.event_name }} event in ${{ github.repository }} repo
on: [push]

jobs:
  codeql:
    name: Run CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'python' # Specify the languages of your project
      - name: Build code
        # Add the necessary commands to build your code (e.g., for JavaScript or Python)
        run: |
          # Example build commands:
          # npm install
          # pip install -r requirements.txt
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  trivy:
    name: Test with trivy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml

#  build:
#    name: Build
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Build an image from Dockerfile
#        run: docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@0.28.0
#        with:
#          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL,HIGH'

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8 linting
        run: flake8 .

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest app_test.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html